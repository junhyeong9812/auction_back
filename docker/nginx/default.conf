# 1) HTTP server
server {
    listen 80;
    server_name www.pinjun.xyz;

    # certbot 인증용(HTTP-01)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # HTTP -> HTTPS 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
     # (옵션) 나머지 모든 경로는 React, Spring 등에 프록시
        # 예: /api => 8080, / => 3000
#         location /api/ {
#             proxy_pass http://host.docker.internal:8080;
#         }
#         location / {
#             proxy_pass http://host.docker.internal:3000;
#         }
}

# 2) HTTPS server
server {
    listen 443 ssl;
    server_name www.pinjun.xyz;

    # 인증서 경로 (Let’s Encrypt 발급 후)
    ssl_certificate     /etc/letsencrypt/live/www.pinjun.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.pinjun.xyz/privkey.pem;

    # (1) /api => 호스트(PC)의 Spring(8080) 프록시
    location /api/ {
        proxy_pass http://host.docker.internal:8080/api/;
        # host.docker.internal 은 Windows/Mac Docker Desktop 환경
        # Linux면 실제 호스트 IP 등을 사용
    }

    # (2) /ws-stomp => 호스트(PC)의 Spring(8080)
    location /ws-stomp {
        proxy_pass http://host.docker.internal:8080/ws-stomp;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # (3) 기타 => 호스트(PC)의 React Dev Server (3000)
    location / {
        proxy_pass http://host.docker.internal:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade; # for hot reload websockets
        proxy_set_header Connection "upgrade";
    }
}
